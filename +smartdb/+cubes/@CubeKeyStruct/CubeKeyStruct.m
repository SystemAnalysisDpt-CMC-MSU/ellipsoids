classdef CubeKeyStruct<smartdb.cubes.TypifiedStruct
    methods (Access=protected,Hidden)
        function initialize(self,varargin)
            [reg,~,fieldMetaData,isFieldMetaData]=...
                modgen.common.parseparext(varargin,...
                {'fieldMetaData'},'propRetMode','separate');
            if isFieldMetaData,
                if ~isa(fieldMetaData,...
                        'smartdb.cubes.CubeStructFieldExtendedNfo'),
                    nFields=fieldMetaData.getNFields();
                    fieldMetaData=smartdb.cubes.CubeStructFieldExtNfo(...
                        fieldMetaData.getCubeStructRefList(),...
                        'nameList',fieldMetaData.getNameList(),...
                        'descriptionList',fieldMetaData.getDescriptionList(),...
                        'typeList',fieldMetaData.getTypeList(),...
                        'sizePatternVecList',repmat({[NaN 1]},1,nFields),...
                        'isSizeAlongAddDimsEqualOneMat',true(1,nFields),...
                        'isUniqueValuesMat',true(1,nFields));
                end
                reg=[reg,{'fieldMetaData',fieldMetaData}];
            end
            initialize@smartdb.cubes.TypifiedStruct(self,reg{:});
            [~,~,fieldNameList,isFieldNameList]=modgen.common.parseparext(reg,...
                {'fieldNameList'},'propRetMode','separate');
            if isFieldNameList,
                nFields=numel(fieldNameList);
                smartdb.cubes.CubeStructFieldInfoBuilder.setSizePatternVecList(...
                    repmat({[NaN 1]},1,nFields));
                smartdb.cubes.CubeStructFieldInfoBuilder.setIsSizeAlongAddDimsEqualOneVec(...
                    true(1,nFields));
                smartdb.cubes.CubeStructFieldInfoBuilder.setIsUniqueValuesVec(...
                    true(1,nFields));
            end
        end
    end
    methods
        function self=CubeKeyStruct(varargin)
            self=self@smartdb.cubes.TypifiedStruct(varargin{:});
        end
    end
    methods (Access=protected)
        function metaDataVec=getMetaDataInternal(self,fieldNameList,...
                fieldDescrList,typeSpecList)
            nFields=numel(fieldNameList);
            metaDataVec=smartdb.cubes.CubeStructFieldExtNfo.customArray(...
                self,fieldNameList,fieldDescrList,typeSpecList,...
                repmat({[NaN 1]},1,nFields),...
                true(1,nFields),true(1,nFields));
        end
    end
end