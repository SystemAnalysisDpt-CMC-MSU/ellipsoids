/*#define WINDOWS  компиляция под MS_WINDOWS */
#define ROUGH /* использование прикидочных операций */

/* использование массивов увеличенного размера */
#define LPM_LARGE       только для lpm_b */
/*#define LPM_      кроме того и для lpm_ibi */
/*#define LPM_LARGE_ROW для остальных double массивов */

#include <stdio.h>

#ifdef LPM
#define LPM_EXTERN
#define LPM_INIT(val) = val
#else
#define LPM_EXTERN extern
#define LPM_INIT(val)
#endif

#ifdef WINDOWS
#include <windows.h>
LPM_EXTERN FILE *prn_file;
#else
#define prn_file stdout
#endif

/* предельные размеры матрицы указаны для варианта */
/* int - 2 байта, long - 4 байта, double - 8 байт, */
/* максимальный размер одного массива - 64 Кбайт   */
#ifdef LPM_
#define LPM_MAX_SPACE 2147483642L
typedef double   *lpm_pb;
typedef int      *lpm_pibi;
typedef long          lpm_num;
#define LPM_FORMAT    "%ld"
#define lpm_num_abs   labs
#else
typedef int       *lpm_pibi;
typedef int           lpm_num;
#define LPM_FORMAT    "%d"
#define lpm_num_abs   abs

#ifdef LPM_LARGE
#define LPM_MAX_SPACE 32760
typedef double   *lpm_pb;
#else
#define LPM_MAX_SPACE 8184
typedef double    *lpm_pb;
#endif

#endif

#ifdef LPM_LARGE_ROW
#define LPM_MAX_ROW 32760
typedef double  *lpm_pdouble;
typedef float  *lpm_pfloat;
#else
#define LPM_MAX_ROW 8184
typedef double   *lpm_pdouble;
typedef float  *lpm_pfloat;
#endif

typedef char ( *name_table) [8];

LPM_EXTERN char lpm_basis [40] LPM_INIT("");

/* массивы */
LPM_EXTERN lpm_pb    lpm_b;
LPM_EXTERN lpm_pibi  lpm_ibi;
LPM_EXTERN lpm_pibi  lpm_ibj;
LPM_EXTERN lpm_pfloat lpm_rhs;
LPM_EXTERN lpm_pfloat lpm_lower;
LPM_EXTERN lpm_pfloat lpm_upper;
LPM_EXTERN lpm_pdouble  lpm_a;
LPM_EXTERN lpm_pdouble  lpm_x;
LPM_EXTERN lpm_pdouble  lpm_xk;
LPM_EXTERN lpm_num  *lpm_icol;
LPM_EXTERN lpm_num  *lpm_ips;
LPM_EXTERN lpm_num  *lpm_iacol;
LPM_EXTERN lpm_num  *lpm_iarow;
LPM_EXTERN int   *lpm_nrow;
LPM_EXTERN int   *lpm_ncol;
LPM_EXTERN int   *lpm_ibase;
LPM_EXTERN char  *lpm_type;
LPM_EXTERN name_table lpm_row_name;
LPM_EXTERN name_table lpm_col_name;

#ifdef WINDOWS
/* handlers */
LPM_EXTERN GLOBALHANDLE hLpm_b;
LPM_EXTERN GLOBALHANDLE hLpm_rhs;
LPM_EXTERN GLOBALHANDLE hLpm_lower;
LPM_EXTERN GLOBALHANDLE hLpm_upper;
LPM_EXTERN GLOBALHANDLE hLpm_a;
LPM_EXTERN GLOBALHANDLE hLpm_x;
LPM_EXTERN GLOBALHANDLE hLpm_xk;
LPM_EXTERN GLOBALHANDLE hLpm_ibi;
LPM_EXTERN GLOBALHANDLE hLpm_icol;
LPM_EXTERN GLOBALHANDLE hLpm_iarow;
LPM_EXTERN GLOBALHANDLE hLpm_iacol;
LPM_EXTERN GLOBALHANDLE hLpm_nrow;
LPM_EXTERN GLOBALHANDLE hLpm_ncol;
LPM_EXTERN GLOBALHANDLE hLpm_ips;
LPM_EXTERN GLOBALHANDLE hLpm_ibase;
LPM_EXTERN GLOBALHANDLE hLpm_type;
LPM_EXTERN GLOBALHANDLE hLpm_row_name;
LPM_EXTERN GLOBALHANDLE hLpm_col_name;
#endif

/* управляющие параметры */
LPM_EXTERN int   lpm_LNG    LPM_INIT(1);
LPM_EXTERN int   lpm_PRNT   LPM_INIT(1);
LPM_EXTERN float lpm_res    LPM_INIT(1.);
LPM_EXTERN float lpm_EPS    LPM_INIT(1.E-13);
LPM_EXTERN float lpm_EPSrel LPM_INIT(1.E-11);
LPM_EXTERN float lpm_EPSpiv LPM_INIT(1.E-7);
LPM_EXTERN float lpm_EPSopt LPM_INIT(10.);
LPM_EXTERN float lpm_TOCHN  LPM_INIT(1.E-9);
LPM_EXTERN float lpm_EPSrhs LPM_INIT(1.E-7);
LPM_EXTERN float lpm_ETMLt  LPM_INIT(1.E-2);
LPM_EXTERN float lpm_ETMLs  LPM_INIT(1.E-10);
LPM_EXTERN float lpm_ETMLu  LPM_INIT(1.E-4);
#ifdef WINDOWS
LPM_EXTERN int   lpm_WND    LPM_INIT(0);
#endif

/* переменные связи */
LPM_EXTERN float   lpm_cmax;
LPM_EXTERN unsigned long lpm_space;
LPM_EXTERN int lpm_nips;
LPM_EXTERN int lpm_ipovt;
LPM_EXTERN int lpm_nml;
LPM_EXTERN int lpm_iter;
LPM_EXTERN int lpm_d;
LPM_EXTERN int lpm_dinfea;
LPM_EXTERN int lpm_dsol;
LPM_EXTERN int lpm_status;
LPM_EXTERN int lpm_k;
LPM_EXTERN int lpm_iold;
LPM_EXTERN int lpm_auxrfp;

#define lpm_abs(p,i) if ((i = *p) < 0) *p = -i
#define ERR_RET(f) if ((IOstatus = f) != 0) return(IOstatus)

#ifdef ROUGH
LPM_EXTERN float unit LPM_INIT(1.0);
#define rough(x) *(long*)&x
#define rough_mult - *(long*)&unit +
#else
#define rough(x) x
#define rough_mult *
#endif

#undef LPM_INIT
#undef LPM_EXTERN
#undef LPM_LARGE
#undef LPM_
#undef LPM_LARGE_ROW

int lpm_read (char*, int*, int*, lpm_num*,
		int*, int, int, int);
void lpm_init (lpm_num);
void lpm_read_basis (char*, int, int);
void lpm_write_basis (char*, int, int);
int lpm_primal (int, int, lpm_num);
int lpm_lumult (int, int, lpm_num);
void lpm_solve (void);
void lpm_subtr (lpm_pdouble, double);
void lpm_objfun (float *, int *, int);
int lpm_getsol (float *, int *, int, int);
int lpm_row_mem (int);
int lpm_col_mem (int, int, lpm_num);
void lpm_free (void);
void rfp_set (int, int *, float *, float*, double,
		int, int);
void rfp_size (int, int*, int*, lpm_num*, float*);
void rfp_shift (int, int, lpm_num, int, int *, float*);
char *lpm_inform (int);
#ifdef WINDOWS
void lpm_lock  (void);
void lpm_unlock(void);
int  lpm_to_wnd(void);
#endif
