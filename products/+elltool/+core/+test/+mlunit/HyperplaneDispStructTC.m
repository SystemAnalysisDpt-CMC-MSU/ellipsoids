classdef HyperplaneDispStructTC < elltool.core.test.mlunit.ADispStruct
    %
    %$Author: Alexander Karev <Alexander.Karev.30@gmail.com> $
    %$Date: 2013-06$
    %$Copyright: Moscow State University,
    %            Faculty of Computational Mathematics
    %            and Computer Science,
    %            System Analysis Department 2013 $
    methods
        function self = HyperplaneDispStructTC(varargin)
            self = self@elltool.core.test.mlunit.ADispStruct(varargin{:});
        end
        
        function self = testToStruct(self)
            hp = hyperplane([1, 1, 2]', 3);
            hpStruct = struct('normal', [1, 1, 2]', 'shift', 3);
            hpStruct.shift = hpStruct.shift/norm(hpStruct.normal);
            hpStruct.normal = hpStruct.normal/norm(hpStruct.normal);
            toStructTest(self, hp, hpStruct, false, true);
            
            hpStruct = struct('normal', [1, 1, 2]', 'shift', 3, 'absTol', 1e-7);
            hpStruct.shift = hpStruct.shift/norm(hpStruct.normal);
            hpStruct.normal = hpStruct.normal/norm(hpStruct.normal);
            toStructTest(self, hp, hpStruct, true, true);
            
            hp = hyperplane([1, 1, 2]', 2);
            toStructTest(self, hp, hpStruct, false, false);
        end
        
        function self = testFromStruct(self)
            hp = hyperplane([1, 2]', 3);
            hpStruct = struct('normal', [1, 2]', 'shift', 3);
            fromStructTest(self, hpStruct, hp, hyperplane(), true);
            
            hpStruct = struct('normal', [1, 2]', 'shift', 3,...
                              'absTol', 1e-5);
            hp = hyperplane([1, 2]', 3, 'absTol', 1e-5);
            fromStructTest(self, hpStruct, hp, hyperplane(), true);              
            
            hp = hyperplane([1, 2]', 3);
            fromStructTest(self, hpStruct, hp, hyperplane(), false);   
        end
        
        function self = testDisplay(self)
            hp = hyperplane([1, 2]', 3);
            str = sprintf( ['\n-------hyperplane object-------\n',...
                            'Properties:\n',...
                            '   |\n',...
                            '   |-- actualClass : ''hyperplane''\n',...
                            '   |--------- size : [1, 1]\n',...
                            '\n',...
                            'Fields (name, type, description):\n',...
                            '    ''normal''    ''double''    ''Hyperplane normal''\n',...
                            '    ''shift''     ''double''    ''Hyperplane shift''\n',...
                            '\n',...
                            'Data: \n',...
                            '   |    \n',...
                            '   |--- shift : 1.34164\n',...
                            '   |-- normal : [0.447214 0.894427]\n']);
            displayTest(self, hp, str, true);
            
            hp = hyperplane([1, 1]', 3);
            displayTest(self, hp, str, false);
            
            hp = [hp hp];
            str = sprintf(['\n-------hyperplane object-------\n',...
                            'Properties:\n',...
                            '   |\n',...
                            '   |-- actualClass : ''hyperplane''\n',...
                            '   |--------- size : [1, 2]\n',...
                            '\n',...
                            'Fields (name, type, description):\n',...
                            '    ''normal''    ''double''    ''Hyperplane normal''\n',...
                            '    ''shift''     ''double''    ''Hyperplane shift''\n',...
                            '\n',...
                            'Data: \n',...
                            ' \n',...
                            'ObjArr(1)\n',...
                            '   |    \n',...
                            '   |--- shift : 2.12132\n',...
                            '   |-- normal : [0.707107 0.707107]\n',...
                            '   O\n',...
                            ' \n',...
                            'ObjArr(2)\n',...
                            '   |    \n',...
                            '   |--- shift : 2.12132\n',...
                            '   |-- normal : [0.707107 0.707107]\n',...
                            '   O\n']);
            displayTest(self, hp, str, true);
        end
    end
end