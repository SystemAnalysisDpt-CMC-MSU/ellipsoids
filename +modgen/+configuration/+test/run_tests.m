function results=run_tests(varargin)
%
% Usage:
%  
%   modgen.configuration.test.run_tests('filter',{'adaptive','modgen.configuration.test.mlunit_test_adaptiveconfrepomgr','test_setGetParamNegative'})
%   modgen.configuration.test.run_tests('filter',{'.*','modgen.configuration.test.mlunit_test_common','testCacheConf'})
%   modgen.configuration.test.run_tests('filter',{'plainver','.*','testRegression'})
%   modgen.configuration.test.run_tests('filter',{'plainver','.*','testRegression'})
%
import modgen.configuration.*;
import modgen.configuration.test.*;
%
runner = mlunitext.text_test_runner(1, 1);
loader = mlunitext.test_loader;
%
[~,filterPropValList]=modgen.common.parseparams(varargin,{'filter'});
if isempty(filterPropValList)
    filterParamList={};
else
    filterParamList=filterPropValList{2};
end

factory=modgen.configuration.test.ConfRepoManagerFactory('plain');
suite_crm = loader.load_tests_from_test_case(...
    'modgen.configuration.test.mlunit_test_crm',factory,'marker','plain');
suite_crm_cm=loader.load_tests_from_test_case(...
    'modgen.configuration.test.mlunit_test_common',factory,'marker','plain');
%
factory=modgen.configuration.test.ConfRepoManagerFactory('plainver');
suite_crmver_cm=loader.load_tests_from_test_case(...
    'modgen.configuration.test.mlunit_test_common',factory,'marker','plainver');
suite_crmver = loader.load_tests_from_test_case(...
    'modgen.configuration.test.mlunit_test_crmversioned',factory,...
    'marker','plainver');
%
factory=modgen.configuration.test.ConfRepoManagerFactory('adaptivever');
suite_adaptivecrmver_cm=loader.load_tests_from_test_case(...
    'modgen.configuration.test.mlunit_test_common',factory,...
    'marker','adaptivever');
suite_adaptivecrmver = loader.load_tests_from_test_case(...
    'modgen.configuration.test.mlunit_test_adaptivecrmversioned',...
    factory,'marker','adaptivever');
%
factory=modgen.configuration.test.ConfRepoManagerFactory('adaptive');
suite_adaptivecrm_cm=loader.load_tests_from_test_case(...
    'modgen.configuration.test.mlunit_test_common',factory,...
    'marker','adaptive');
suite_adaptivecrm = loader.load_tests_from_test_case(...
    'modgen.configuration.test.mlunit_test_adaptiveconfrepomgr',...
    factory,'marker','adaptive');
%
factory=modgen.configuration.test.ConfRepoManagerFactory('versioned');
suite_versioned_cm=loader.load_tests_from_test_case(...
    'modgen.configuration.test.mlunit_test_common',factory,...
    'marker','versioned');
suite_versioned = loader.load_tests_from_test_case(...
    'modgen.configuration.test.mlunit_test_versionedconfrepomgr',...
    factory,'marker','versioned');
%
factory=modgen.configuration.test.ConfRepoManagerFactory('inmem');
suite_crm_nostorage = loader.load_tests_from_test_case(...
    'modgen.configuration.test.mlunit_test_crm_no_storage',factory,...
    'marker','inmem');
%
suite_adaptive_negative=loader.load_tests_from_test_case('modgen.configuration.test.mlunit.SuiteNegative');
suite_adaptive_basic=loader.load_tests_from_test_case('modgen.configuration.test.mlunit.SuiteBasic');
%
suite = mlunitext.test_suite(horzcat(...
    suite_adaptivecrm.tests,...
    suite_crm.tests,...
    suite_crmver.tests,...
    suite_adaptivecrmver.tests,...
    suite_versioned.tests,...
    suite_adaptivecrm_cm.tests,...
    suite_crm_cm.tests,...
    suite_crmver_cm.tests,...
    suite_adaptivecrmver_cm.tests,...
    suite_versioned_cm.tests,...
    suite_crm_nostorage.tests,...
    suite_adaptive_negative.tests,...
    suite_adaptive_basic.tests));
%
suite=suite.getCopyFiltered(filterParamList{:});

results=runner.run(suite);